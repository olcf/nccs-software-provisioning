- name: "Check for Previous GCC v{{ NSP_GCC_version }} Installation"
  ansible.builtin.stat:
    path: "{{ [NSP_install_root, 'gcc', NSP_GCC_version, 'bin', 'gcc'] | path_join }}"
  register: install_status
  tags: [ "gcc", "installation" ]

- name: "Launch GCC v{{ NSP_GCC_version }} Installation"
  ansible.builtin.include_tasks:
    file: "install.yaml"
  when: not install_status.stat.exists
  tags: [ "gcc", "installation" ]

- name: "Ensure GCC v{{ NSP_GCC_version }} Module Folder Exists"
  ansible.builtin.file:
    path: "{{ [NSP_module_root, 'gcc'] | path_join }}"
    state: directory
    owner: "{{ NSP_user }}"
    group: "{{ NSP_group }}"
    mode: "{{ NSP_executable_permissions }}"
  when: NSP_GCC_create_module
  tags: [ "gcc", "configuration" ]

- name: "Ensure GCC v{{ NSP_GCC_version }} Module File Exists"
  ansible.builtin.template:
    src: "module.lua.j2"
    dest: "{{ [NSP_module_root, 'gcc', '{}.lua'.format(NSP_GCC_version)] | path_join }}"
    owner: "{{ NSP_user }}"
    group: "{{ NSP_group }}"
    mode: "{{ NSP_file_permissions }}"
  when: NSP_GCC_create_module
  tags: [ "gcc", "configuration" ]
