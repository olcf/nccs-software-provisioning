- name: Clear Previous GCC v{{ NSP_GCC_version }} Build Files
  ansible.builtin.file:
    path: "{{ [NSP_scratch_directory, 'gcc-{}'.format(NSP_GCC_version)] | path_join }}"
    state: absent
  when: NSP_GCC_clean_build and [NSP_scratch_directory, 'gcc-{}'.format(NSP_GCC_version)] | path_join is directory
  tags:
    - gcc
    - installation

- name: Download and Unpack GCC v{{ NSP_GCC_version }} Tarball
  ansible.builtin.unarchive:
    remote_src: true
    src: "https://gcc.gnu.org/pub/gcc/releases/gcc-{{ NSP_GCC_version }}/gcc-{{ NSP_GCC_version }}.tar.gz"
    dest: "{{ NSP_scratch_directory }}"
  when: not [NSP_scratch_directory, 'gcc-{}'.format(NSP_GCC_version)] | path_join is directory
  tags:
    - gcc
    - installation

- name: Build and Install GCC v{{ NSP_GCC_version }}
  ansible.builtin.shell:
    cmd: |
      ./contrib/download_prerequisites
      rm -rf build && mkdir build && cd build
      ../configure --enable-languages={{ ','.join(NSP_GCC_enabled_languages) }} --disable-multilib \
        --prefix {{ [NSP_install_root, 'gcc', NSP_GCC_version] | path_join }}
      make -j{{ NSP_max_threads }}
      make install
    chdir: "{{ [NSP_scratch_directory, 'gcc-{}'.format(NSP_GCC_version)] | path_join }}"
  changed_when: true
  tags:
    - gcc
    - installation

- name: Clean up Scratch after GCC v{{ NSP_GCC_version }} Build
  ansible.builtin.include_role:
    name: nsp
    tasks_from: clear_scratch
  when: NSP_keep_scratch_clear
  tags:
    - gcc
    - installation
